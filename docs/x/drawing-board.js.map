{"version":3,"sources":["webpack:///./x/drawing-board.ts","webpack:///webpack/startup"],"names":[],"mappings":"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","file":"drawing-board.js","sourcesContent":["class XDrawingBoard extends HTMLElement {\n  #shadow!: ShadowRoot;\n  #canvas!: HTMLCanvasElement;\n  #context!: CanvasRenderingContext2D;\n  #width: number = 300;\n  #height: number = 150;\n  #color: string = \"#000\";\n  static get observedAttributes() {\n    return [\"width\", \"height\", \"color\"];\n  }\n  constructor() {\n    super();\n\n    this.#shadow = this.attachShadow({ mode: \"open\" });\n\n    const canvas = document.createElement(\"canvas\");\n    this.#canvas = canvas;\n\n    this.#shadow.append(canvas);\n  }\n\n  public get width(): number {\n    return this.#width;\n  }\n\n  public get height(): number {\n    return this.#height;\n  }\n\n  public connectedCallback() {\n    const _width = this.getAttribute(\"width\");\n    const _height = this.getAttribute(\"height\");\n    const _color = this.getAttribute(\"color\");\n\n    if (_width && !isNaN(+_width)) {\n      this.#width = +_width;\n    }\n\n    if (_height && !isNaN(+_height)) {\n      this.#height = +_height;\n    }\n\n    if (_color) {\n      this.#color = _color;\n    }\n\n    const canvas = this.#canvas;\n\n    canvas.width = this.width;\n    canvas.height = this.height;\n\n    this.style.width = this.width + \"px\";\n    this.style.height = this.height + \"px\";\n    this.style.display = \"inline-block\";\n\n    const ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n    this.#context = ctx;\n    this.#context.fillStyle = this.#color;\n    this.#context.strokeStyle = this.#color;\n\n    canvas.addEventListener(\"mousedown\", this.#start, { passive: false });\n    canvas.addEventListener(\"touchstart\", this.#start, { passive: false });\n  }\n\n  public disconnectedCallback() {\n    this.#canvas.removeEventListener(\"mousedown\", this.#start);\n    this.#canvas.removeEventListener(\"touchstart\", this.#start);\n    this.#canvas.removeEventListener(\"mousemove\", this.#move);\n    this.#canvas.removeEventListener(\"touchmove\", this.#move);\n    this.#canvas.removeEventListener(\"mouseup\", this.#end);\n    this.#canvas.removeEventListener(\"touchend\", this.#end);\n  }\n\n  public attributeChangedCallback(\n    attrName: string,\n    oldVal: string,\n    newVal: string\n  ) {\n    switch (attrName) {\n      case \"color\":\n        this.#color = newVal;\n        break;\n      case \"width\":\n        this.#width = +newVal;\n        break;\n      case \"height\":\n        this.#height = +newVal;\n        break;\n    }\n  }\n\n  public adoptedCallback() {}\n\n  public clear() {\n    this.#context.clearRect(0, 0, this.width, this.height);\n  }\n\n  public toBase64(type: string = \"image/jpg\"): string {\n    return this.#canvas.toDataURL(type);\n  }\n\n  public download(filename: string = \"image.jpg\") {\n    const link = document.createElement(\"a\");\n    link.download = filename;\n    link.href = this.toBase64();\n    link.click();\n  }\n\n  #start = (event: TouchEvent | MouseEvent) => {\n    let point!: { clientX: number; clientY: number };\n    // safari: PC mode is not have `TouchEvent` in global object\n    if (typeof TouchEvent !== \"undefined\" && event instanceof TouchEvent) {\n      point = event.changedTouches[0];\n    } else {\n      point = event as MouseEvent;\n    }\n    const stroke_info = this.#canvas.getBoundingClientRect();\n    this.#context.beginPath(); // clear path\n    this.#context.moveTo(\n      point.clientX - stroke_info.left,\n      point.clientY - stroke_info.top\n    );\n\n    this.#canvas.addEventListener(\"mousemove\", this.#move, { passive: false });\n    this.#canvas.addEventListener(\"touchmove\", this.#move, { passive: false });\n\n    this.#canvas.addEventListener(\"mouseup\", this.#end, { passive: false });\n    this.#canvas.addEventListener(\"touchend\", this.#end, { passive: false });\n    event.preventDefault();\n  };\n\n  #move = (event: TouchEvent | MouseEvent) => {\n    let point!: { clientX: number; clientY: number };\n    // safari: PC mode is not have `TouchEvent` in global object\n    if (typeof TouchEvent !== \"undefined\" && event instanceof TouchEvent) {\n      point = event.changedTouches[0];\n    } else {\n      point = event as MouseEvent;\n    }\n    const stroke_info = this.#canvas.getBoundingClientRect();\n    this.#context.lineTo(\n      point.clientX - stroke_info.left,\n      point.clientY - stroke_info.top\n    );\n    this.#context.stroke();\n    event.preventDefault();\n  };\n\n  #end = (event: TouchEvent | MouseEvent) => {\n    this.#canvas.removeEventListener(\"mousemove\", this.#move);\n    this.#canvas.removeEventListener(\"touchmove\", this.#move);\n    event.preventDefault();\n  };\n}\n\ncustomElements.define(\"x-drawing-board\", XDrawingBoard);\n","// startup\n// Load entry module\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_modules__[1]();\n"],"sourceRoot":""}